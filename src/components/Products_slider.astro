---
import ProductCard from "./Product_card.astro";
---

<section class="drag">
  <a href="/product">
    <ProductCard
      name="ACRO NECKLACE & AMOR CHARM"
      price="5300"
      img="/assets/img/shop/forside1.webp"
      hover="/assets/img/hoverphotosshop/acronecklace_amorchain.webp"
      alt="ACRO NECKLACE & AMOR CHARM"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="ANÈL RING"
      price="2200"
      img="/assets/img/shop/shop2.webp"
      hover="/assets/img/hoverphotosshop/anelring.webp"
      alt="ANÈL RING"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="ANÇITI CHARM"
      price="1100"
      img="/assets/img/shop/shop3.webp"
      hover="/assets/img/hoverphotosshop/anciticharm.webp"
      alt="ANÇITI CHARM"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="Lago Bracelet"
      price="5300"
      img="/assets/img/shop/forside4.webp"
      hover="/assets/img/hoverphotosshop/lagobracelet.webp"
      alt="Lago Bracelet"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="Olho Necklace"
      price="3700"
      img="/assets/img/shop/forside5.webp"
      hover="/assets/img/hoverphotosshop/olhonecklace.webp"
      alt="Olho Necklace"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="Amor Charm"
      price="1100"
      img="/assets/img/shop/forside6.webp"
      hover="/assets/img/hoverphotosshop/amorcharm.webp"
      alt="Amor Charm"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="ANÇITI CHARM & CIÒIÒ CHAIN"
      price="1750"
      img="/assets/img/shop/forside7.webp"
      hover="/assets/img/hoverphotosshop/anciticharm_cioiochain.webp"
      alt="ANÇITI CHARM & CIÒIÒ CHAIN"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="Acro Neckring"
      price="2900"
      img="/assets/img/shop/forside8.webp"
      hover="/assets/img/hoverphotosshop/acroneckring.webp"
      alt="Acro Neckring"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="Charm"
      price="1100"
      img="/assets/img/shop/forside9.webp"
      hover="/assets/img/hoverphotosshop/ohlocharm.webp"
      alt="Charm"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="Mar charm"
      price="1100"
      img="/assets/img/shop/forside10.webp"
      hover="/assets/img/hoverphotosshop/marcharm.webp"
      alt="Mar charm"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="Onda ring"
      price="1500"
      img="/assets/img/shop/forside11.webp"
      hover="/assets/img/hoverphotosshop/ondaring.webp"
      alt="Onda ring"
    />
  </a>
  <a href="/product">
    <ProductCard
      name="Asa lock bracelet"
      price="3250"
      img="/assets/img/shop/forside12.webp"
      hover="/assets/img/hoverphotosshop/asalockbracelet.webp"
      alt="Asa lock bracelet"
    />
  </a>

  <style>
    section {
      display: flex;
      gap: 20px;
      padding: 25px 5px;
      white-space: nowrap;
      overflow-x: scroll;
      cursor: grab;
    }

    .drag::-webkit-scrollbar {
      background: white;
      width: 16px;
      opacity: 0;
      display: none;
    }

    .drag::-webkit-scrollbar-thumb {
      border-radius: 16px;
      border: 4px solid #fff;
      opacity: 0;
      display: none;
    }

    .drag::-webkit-scrollbar-thumb:hover {
      display: none;
    }

    @media (max-width: 700px) {
      .drag {
        padding-left: 10px;
        gap: 10px;
      }
    }
  </style>

  <script>
    const container = document.querySelector(".drag") as HTMLElement;
    let isMouseDown = false;
    let isDragging = false;
    let startX: number;
    let scrollLeft: number;
    const dragThreshold = 5; // Minimum distance to consider it a drag

    container.addEventListener("mousedown", (e: MouseEvent) => {
      isMouseDown = true;
      isDragging = false;
      startX = e.pageX - container.offsetLeft;
      scrollLeft = container.scrollLeft;
      container.style.cursor = "grabbing";
    });

    container.addEventListener("mouseleave", () => {
      isMouseDown = false;
      if (isDragging) {
        container.style.cursor = "grab";
      }
    });

    container.addEventListener("mouseup", () => {
      isMouseDown = false;
      setTimeout(() => {
        if (isDragging) {
          container.style.cursor = "grab";
          isDragging = false;
        }
      }, 0);
    });

    container.addEventListener("mousemove", (e: MouseEvent) => {
      if (!isMouseDown) return;
      e.preventDefault();
      const x = e.pageX - container.offsetLeft;
      const walk = (x - startX) * 1; // How fast to scroll
      if (Math.abs(walk) > dragThreshold) {
        container.scrollLeft = scrollLeft - walk;
        isDragging = true;
      }
    });

    // Prevent the click event from propagating if dragging occurred
    container.addEventListener("click", (e: MouseEvent) => {
      if (isDragging) {
        e.preventDefault();
        isDragging = false;
      }
    });

    // Ensure the cursor changes to indicate dragging
    container.addEventListener("mousedown", () => {
      container.style.cursor = "grabbing";
    });
    container.addEventListener("mouseup", () => {
      container.style.cursor = "grab";
    });
  </script>
</section>
